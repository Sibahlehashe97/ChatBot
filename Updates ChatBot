import streamlit as st
import pandas as pd
import subprocess
import textwrap
import re

st.set_page_config(page_title="Ask Your Excel File", layout="centered")
st.title("üìä Ask Questions About Your Employee Data")

# Step 1: Upload Excel and convert to DataFrame
uploaded_file = st.file_uploader("Upload your employee Excel file", type=["xlsx"])

if uploaded_file:
    df = pd.read_excel(uploaded_file)
    st.success("‚úÖ Data loaded successfully!")
    st.write("### Preview of your dataset:", df.head())

    # Step 2: Ask natural language question
    user_question = st.text_input("üí¨ Ask a question about the dataset:",
                                   placeholder="e.g., How much did we spend on salaries?")

    if user_question:
        # Step 3: Build LLM prompt
        column_info = ", ".join(df.columns)
        sample_data = df.head(3).to_dict(orient="records")

        prompt = f"""
You are a Python data analyst. Given a DataFrame called `df` with these columns: {column_info}
Here are a few sample rows from the dataset: {sample_data}

The user asked: "{user_question}"

Write a Python function named `answer(df)` that answers the question using pandas.
Only return the code with the function definition and no explanations or markdown.ANd no importing any libraries just the function only
DateNotified and DateClosed are date type columns
        """

        st.subheader("üîß Generated Code")
        st.write("Asking LLaMA2...")

        # Step 4: Call local LLaMA2 with Ollama (capture stdout)
        try:
            result = subprocess.run(
                ["ollama", "run", "tinyllama", prompt],
                capture_output=True,
                text=True,
                check=True
            )
            raw_code = result.stdout.strip()

            # Step 5: Remove triple backticks and clean code block
            clean_code = re.sub(r"```(?:python)?|```", "", raw_code).strip()

            # Step 6: Show the code to the user
            st.code(clean_code, language="python")

            # Step 7: Define and run the generated function
            local_vars = {}
           
            exec(clean_code, {}, local_vars)

            if "answer" in local_vars:
                output = local_vars["answer"](df)
                st.subheader("üìå Result")
                st.write(output)
            else:
                st.error("‚ùå No 'answer' function was defined in the code.")

        except subprocess.CalledProcessError as e:
            st.error("‚ùå Error from Ollama: " + str(e))
        except Exception as e:
            st.error("‚ùå Code execution error: " + str(e))
